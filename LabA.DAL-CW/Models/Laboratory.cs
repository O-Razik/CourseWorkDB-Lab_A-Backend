// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Threading.Tasks;
using Lab_A.Abstraction.IModels;
using Microsoft.EntityFrameworkCore;

namespace Lab_A.DAL.Models;

[Table("Laboratory")]
public partial class Laboratory : ILaboratory
{
    [Key]
    [Column("laboratory_id")]
    public int LaboratoryId { get; set; }

    [Column("address", TypeName = "nvarchar(255)")]
    [StringLength(50)]
    public string Address { get; set; }

    [Column("city_id")]
    public int CityId { get; set; }

    [Column("phone_number", TypeName = "nvarchar(50)")]
    [StringLength(50)]
    public string PhoneNumber { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? UpdateDatetime { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime CreateDatetime { get; set; }

    [ForeignKey("CityId")]
    [InverseProperty("Laboratories")]
    public virtual City City { get; set; }

    [InverseProperty("Laboratory")]
    public virtual ICollection<Employee> Employees { get; set; } = new List<Employee>();

    [InverseProperty("Laboratory")]
    public virtual ICollection<InventoryInLaboratory> InventoryInLaboratories { get; set; } = new List<InventoryInLaboratory>();

    [InverseProperty("Laboratory")]
    public virtual ICollection<LaboratorySchedule> LaboratorySchedules { get; set; } = new List<LaboratorySchedule>();

    ICity ILaboratory.City
    {
        get => City;
        set => City = (City)value;
    }

    ICollection<IEmployee> ILaboratory.Employees
    {
        get => Employees.Cast<IEmployee>().ToList();
        set => Employees = value.Cast<Employee>().ToList();
    }

    ICollection<IInventoryInLaboratory> ILaboratory.InventoryInLaboratories
    {
        get => InventoryInLaboratories.Cast<IInventoryInLaboratory>().ToList();
        set => InventoryInLaboratories = value.Cast<InventoryInLaboratory>().ToList();
    }

    ICollection<ILaboratorySchedule> ILaboratory.LaboratorySchedules
    {
        get => LaboratorySchedules.Cast<ILaboratorySchedule>().ToList();
        set => LaboratorySchedules = value.Cast<LaboratorySchedule>().ToList();
    }
}