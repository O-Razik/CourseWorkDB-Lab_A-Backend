// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Lab_A.Abstraction.IModels;
using Microsoft.EntityFrameworkCore;

namespace Lab_A.DAL.Models;

[Table("Employee")]
public partial class Employee : IEmployee
{
    [Key]
    [Column("employee_id")]
    public int EmployeeId { get; set; }

    [Column("position_id")]
    public int PositionId { get; set; }

    [Column("laboratory_id")]
    public int? LaboratoryId { get; set; }

    [Column("first_name")]
    [StringLength(255)]
    [Unicode(false)]
    public string FirstName { get; set; }

    [Column("last_name")]
    [StringLength(255)]
    [Unicode(false)]
    public string LastName { get; set; }

    [Column("phone_number")]
    [StringLength(20)]
    [Unicode(false)]
    public string PhoneNumber { get; set; }

    [Column("email")]
    [StringLength(255)]
    [Unicode(false)]
    public string Email { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? UpdateDatetime { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime CreateDatetime { get; set; }

    [InverseProperty("Employee")]
    public virtual ICollection<ClientOrder> ClientOrders { get; set; } = new List<ClientOrder>();

    [ForeignKey("LaboratoryId")]
    [InverseProperty("Employees")]
    public virtual Laboratory Laboratory { get; set; }

    [ForeignKey("PositionId")]
    [InverseProperty("Employees")]
    public virtual Position Position { get; set; }

    [InverseProperty("Employee")]
    public virtual ICollection<UserEmployee> UserEmployees { get; set; } = new List<UserEmployee>();

    ICollection<IClientOrder> IEmployee.ClientOrders
    {
        get => ClientOrders.Cast<IClientOrder>().ToList();
        set => ClientOrders = value.Cast<ClientOrder>().ToList();
    }

    ILaboratory IEmployee.Laboratory 
    { 
        get => Laboratory;
        set => Laboratory = (Laboratory)value;
    }

    IPosition IEmployee.Position
    {
        get => Position;
        set => Position = (Position)value;
    }
}