// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Lab_A.Abstraction.IModels;
using Microsoft.EntityFrameworkCore;

namespace Lab_A.DAL.Models;

[Table("InventoryInLaboratory")]
public partial class InventoryInLaboratory : IInventoryInLaboratory
{
    [Key]
    [Column("inventory_in_laboratory_id")]
    public int InventoryInLaboratoryId { get; set; }

    [Column("expiration_date", TypeName = "datetime")]
    public DateTime? ExpirationDate { get; set; }

    [Column("quantity")]
    public int? Quantity { get; set; }

    [Column("inventory_id")]
    public int? InventoryId { get; set; }

    [Column("laboratory_id")]
    public int? LaboratoryId { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? UpdateDatetime { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime CreateDatetime { get; set; }

    [InverseProperty("InventoryInLaboratory")]
    public virtual ICollection<BiomaterialCollection> BiomaterialCollections { get; set; } = new List<BiomaterialCollection>();

    [ForeignKey("InventoryId")]
    [InverseProperty("InventoryInLaboratories")]
    public virtual Inventory Inventory { get; set; }

    [InverseProperty("InventoryInLaboratory")]
    public virtual ICollection<InventoryDelivery> InventoryDeliveries { get; set; } = new List<InventoryDelivery>();

    [ForeignKey("LaboratoryId")]
    [InverseProperty("InventoryInLaboratories")]
    public virtual Laboratory Laboratory { get; set; }

    ICollection<IBiomaterialCollection> IInventoryInLaboratory.BiomaterialCollections
    {
        get => BiomaterialCollections.Cast<IBiomaterialCollection>().ToList();
        set => BiomaterialCollections = value.Cast<BiomaterialCollection>().ToList();
    }

    IInventory IInventoryInLaboratory.Inventory
    {
        get => Inventory;
        set => Inventory = value as Inventory;
    }

    ICollection<IInventoryDelivery> IInventoryInLaboratory.InventoryDeliveries
    {
        get => InventoryDeliveries.Cast<IInventoryDelivery>().ToList();
        set => InventoryDeliveries = value.Cast<InventoryDelivery>().ToList();
    }

    ILaboratory IInventoryInLaboratory.Laboratory
    {
        get => Laboratory;
        set => Laboratory = value as Laboratory;
    }
}